#!/usr/bin/env python3

import argparse
import os
import subprocess


TRASH_QUERY = 'tag:deleted and not path:/Trash/'.split()
SPAM_QUERY  = 'tag:spam'.split()


def remove_mail(query):
    trash0 = subprocess.check_output(
        [
            "notmuch",
            "search",
            "--exclude=false",
            "--output=files",
            "--format=text0",
            "--",
            *query,
        ],
        universal_newlines=True,
    )
    trash = filter(None, trash0.split("\0"))
    for mail in trash:
        print("Removing:", mail)
        os.unlink(mail)


def fake_remove_mail(query):
    dry_trash = subprocess.check_output(
        [
            "notmuch",
            "search",
            "--exclude=false",
            "--",
            *query,
        ],
        universal_newlines=True,
    )
    print(dry_trash, end="")


def main(argv=None):
    parser = argparse.ArgumentParser()
    mode = parser.add_mutually_exclusive_group(required=True)
    mode.add_argument(
        "-n", "--dry-run",
        help=(
            "Don't actually delete anything, "
            "just print what would be deleted."
        ),
        action='store_true',
    )
    mode.add_argument(
        "-f", "--force",
        help="Do delete the matched emails.",
        action='store_true',
    )
    parser.add_argument(
        "-s", "--spam",
        help="Operate on the spam folder instead of trash/deleted.",
        action='store_true',
    )
    args = parser.parse_args()

    query = SPAM_QUERY if args.spam else TRASH_QUERY

    if args.force:
        remove_mail(query)
    elif args.dry_run:
        fake_remove_mail(query)
    else:
        assert False


if __name__ == '__main__':
    from sys import argv
    main(argv)
